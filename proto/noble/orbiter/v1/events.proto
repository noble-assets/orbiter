syntax = "proto3";

package noble.orbiter.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "noble/orbiter/core/v1/orbiter.proto";

option go_package = "github.com/noble-assets/orbiter/types";

// EventPayloadSubmitted is emitted after successful submission of a payload.
message EventPayloadSubmitted {
  // The keccak256 hash of the now pending payload.
  bytes hash = 1;
  // The address that has submitted the payload.
  string submitter = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // The submitted payload.
  noble.orbiter.core.v1.Payload payload = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// EventPayloadRemoved is emitted after removing a pending payload from the queue.
message EventPayloadRemoved {
  // The keccak256 hash of the removed payload.
  bytes hash = 1;
}
